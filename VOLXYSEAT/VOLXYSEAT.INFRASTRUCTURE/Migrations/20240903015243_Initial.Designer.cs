// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VOLXYSEAT.INFRASTRUCTURE.Data;

#nullable disable

namespace VOLXYSEAT.INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240903015243_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.SubscriptionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewStatus")
                        .HasColumnType("int");

                    b.Property<int>("OldStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionHistories");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.SubscriptionProperties", b =>
                {
                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("APIAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("Analytics")
                        .HasColumnType("bit");

                    b.Property<bool>("Backup")
                        .HasColumnType("bit");

                    b.Property<bool>("Chat")
                        .HasColumnType("bit");

                    b.Property<bool>("CloudStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("Customization")
                        .HasColumnType("bit");

                    b.Property<bool>("Documentation")
                        .HasColumnType("bit");

                    b.Property<bool>("Email")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Integration")
                        .HasColumnType("bit");

                    b.Property<bool>("LiveSupport")
                        .HasColumnType("bit");

                    b.Property<bool>("Messenger")
                        .HasColumnType("bit");

                    b.Property<bool>("MultiUser")
                        .HasColumnType("bit");

                    b.Property<bool>("Onboarding")
                        .HasColumnType("bit");

                    b.Property<bool>("Phone")
                        .HasColumnType("bit");

                    b.Property<bool>("PrioritySupport")
                        .HasColumnType("bit");

                    b.Property<bool>("SLA")
                        .HasColumnType("bit");

                    b.Property<bool>("ServiceLevel")
                        .HasColumnType("bit");

                    b.Property<bool>("Support")
                        .HasColumnType("bit");

                    b.Property<bool>("Training")
                        .HasColumnType("bit");

                    b.Property<bool>("Updates")
                        .HasColumnType("bit");

                    b.HasKey("SubscriptionId");

                    b.ToTable("SubscriptionProperties");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordConfirm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.SubscriptionHistory", b =>
                {
                    b.HasOne("VOLXYSEAT.DOMAIN.Models.Subscription", null)
                        .WithMany("History")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired()
                        .HasConstraintName("FK_Subscription_SubscriptionHistory");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.SubscriptionProperties", b =>
                {
                    b.HasOne("VOLXYSEAT.DOMAIN.Models.Subscription", "Subscription")
                        .WithOne("SubscriptionProperties")
                        .HasForeignKey("VOLXYSEAT.DOMAIN.Models.SubscriptionProperties", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("VOLXYSEAT.DOMAIN.Models.Subscription", b =>
                {
                    b.Navigation("History");

                    b.Navigation("SubscriptionProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
